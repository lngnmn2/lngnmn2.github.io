<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Notes from the digital underground by Lngnmn</title>
    <link>https://lngnmn2.github.io/</link>
    <description>Recent content on Notes from the digital underground by Lngnmn</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 18 Jul 2023 00:00:00 +0545</lastBuildDate><atom:link href="https://lngnmn2.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>About me.</title>
      <link>https://lngnmn2.github.io/about/</link>
      <pubDate>Thu, 13 Jul 2023 00:00:00 +0545</pubDate>
      
      <guid>https://lngnmn2.github.io/about/</guid>
      <description>A few words about me I am Jack&amp;rsquo;s wasted life.
I wrote a bunch of articles by an organ in the first person.
https://schiptsov.github.io/
My HN footprint My relationships with https://news.ycombinator.com/ was rather stormy.
I would say that I have graduated from it, starting as a naive idealist on the best (at the very beginning) free English-media technologist site, and ended up as a bitter dissident from the heavily policed and strictly moderated Chud&amp;rsquo;s safe space.</description>
    </item>
    
    <item>
      <title>Foundations</title>
      <link>https://lngnmn2.github.io/articles/foundations/</link>
      <pubDate>Tue, 18 Jul 2023 00:00:00 +0545</pubDate>
      
      <guid>https://lngnmn2.github.io/articles/foundations/</guid>
      <description>Stupid people would usually ask &amp;ldquo;why do we need all this theoretical bullshit and abstracted theories&amp;rdquo;?
The answer is, to have &amp;ldquo;the right understanding&amp;rdquo; and because of that to be able to do things &amp;ldquo;just right&amp;rdquo;.
&amp;ldquo;Just right&amp;rdquo; has many meanings and implications. Among other things it is that what has been &amp;ldquo;done right&amp;rdquo; (ideally &amp;ndash; a local optimum) does not require any further modifications.
It was indeed &amp;ldquo;done&amp;rdquo; (right). There is nothing more to remove (or alter).</description>
    </item>
    
    <item>
      <title>The recurring patterns captured as a Monoid</title>
      <link>https://lngnmn2.github.io/articles/monoids/</link>
      <pubDate>Sun, 16 Jul 2023 00:00:00 +0545</pubDate>
      
      <guid>https://lngnmn2.github.io/articles/monoids/</guid>
      <description>The common patterns There are recurrent patterns, which has been captured in familiar &amp;ldquo;standard&amp;rdquo; abstractions.
Monoid A Set along with a composition operation, which has an identity element.
addition, for (+) identity is 0 concatenation, which is a specialization of putting together, identity is &amp;quot;&amp;quot;. List, a fundamental recursive sum-type, identity is [] Option, a specialization of empty/non-empty aspect of a List, identity is None Boolean logic, very subtle, identity is False (false imply nothing) The notion that some Boolean operations form a Monoid is very subtle, but it will emerge with conditional expressions.</description>
    </item>
    
    <item>
      <title>Remote</title>
      <link>https://lngnmn2.github.io/articles/remote/</link>
      <pubDate>Sat, 15 Jul 2023 00:00:00 +0545</pubDate>
      
      <guid>https://lngnmn2.github.io/articles/remote/</guid>
      <description>Back in 80s and 90s, which, arguably, was the golden age of programming if we look at evolution of the Classic languages (Lisp and ML family), we did not have any &amp;ldquo;online&amp;rdquo; real-time constant-presence crap (except IRC, which was fun).
All the means of communication we had back then were , in principle, text-based, off-line, /asynchronous.
In short, we used the ancient &amp;ldquo;paradigm&amp;rdquo;, which goes back to the ancient &amp;ldquo;spiritual practices&amp;rdquo;, based on solitude, withdrawal from society, observation after taking a step back, and focused introspection.</description>
    </item>
    
    <item>
      <title>Understanding Rust</title>
      <link>https://lngnmn2.github.io/articles/unrestanding-rust/</link>
      <pubDate>Sat, 15 Jul 2023 00:00:00 +0545</pubDate>
      
      <guid>https://lngnmn2.github.io/articles/unrestanding-rust/</guid>
      <description>The Rust programming language has been hyped as a system programming language, which implies that it has to have an explicit &amp;ldquo;access&amp;rdquo; to the hardware-level abstractions, such as the Stack, the Heap and the Procedures, together with the operating system-level abstractions, such as following the particular calling conventions (a set of standardized interfaces) for an &amp;ldquo;arch and OS /duo&amp;rdquo;, and to be &amp;ldquo;aware of&amp;rdquo; the ABIs in general.
Overview Rust is, in principle, an imperative language.</description>
    </item>
    
    <item>
      <title>The simplest self-publishing workflow</title>
      <link>https://lngnmn2.github.io/articles/the-simplest-workflow/</link>
      <pubDate>Thu, 13 Jul 2023 00:00:00 +0545</pubDate>
      
      <guid>https://lngnmn2.github.io/articles/the-simplest-workflow/</guid>
      <description>Overview This is the simplest but smart self-publishing workflow.
org-mode -&amp;gt; ox_hugo -&amp;gt; hugo -&amp;gt; static html -&amp;gt; git commit -a -&amp;gt; git push -&amp;gt; github pages
Everything is according to the universal principles of being almost &amp;ldquo;pure functional transformations&amp;rdquo; of a structured and decorated text, together with version control, which provides sort of immutability (of the previous versions).
At each stage or step we delegate some aspect to an appropriate external vendored tool.</description>
    </item>
    
  </channel>
</rss>
